on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'paper/**'
      - 'README.md'
      - 'COPYING'
      - '.gitignore'
    branches:
      - main

  pull_request:
      types: [ready_for_review]
  pull_request_review:
      types: [submitted]
  workflow_dispatch:
    inputs:
      name:
        description: "Reason"
        default: "Manual Trigger"

jobs:
  build_and_test_gcc_old:
    runs-on: ubuntu-20.04
    name: Build & Test GCC
    env:
      COMPILER_VERS: 7 8
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prep Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl csh git python3.8
          update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2
          curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python3 get-pip.py
          python3 -m pip install cmake
      - name: Build
        env:
          NO_TEST_CAL: ON
        run: |
          for ver in ${COMPILER_VERS}; do
            sudo apt-get install -y gcc-${ver} g++-${ver};
            sudo CC=gcc-${ver} CXX=g++-${ver} bash build.sh 1; 
            sudo apt-get remove -y gcc-${ver} g++-${ver};
          done;
          

  build_and_test_gcc:
    name: Build & Test GCC
    runs-on: ubuntu-22.04
    env:
      COMPILER_VERS: 9 10 11 12
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prep Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl csh git python3
          curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python3 get-pip.py
          python3 -m pip install cmake

      - name: Build
        run: |
          for ver in ${COMPILER_VERS}; do
            sudo apt-get install -y gcc-${ver} g++-${ver};
            if [ ${ver} -eq 12 ]; then \
              sudo CC=gcc-${ver} CXX=g++-${ver} bash build.sh 1; \
            else \
              sudo CC=gcc-${ver} CXX=g++-${ver} NO_CAL_TEST=ON bash build.sh 1; \
            fi;
            sudo apt-get remove -y gcc-${ver} g++-${ver};
          done;

  build_and_test_clang_old:
    runs-on: ubuntu-20.04
    name: Build & Test clang
    env:
      COMPILER_VERS: 7 8 9
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prep Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl csh git python3.8
          update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2
          curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python3 get-pip.py
          python3 -m pip install cmake
      - name: Build
        env:
          NO_TEST_CAL: ON
        run: |
          for ver in ${COMPILER_VERS}; do
            sudo apt-get install -y clang-${ver} clang++-${ver} libomp5-${ver} libomp-${ver}-dev;
            sudo CC=clang-${ver} CXX=clang++-${ver} bash build.sh 1; 
            sudo apt-get remove -y clang-${ver} clang++-${ver} libomp5-${ver} libomp-${ver}-dev;
          done;

  build_and_test_clang:
    name: Build & Test clang
    runs-on: ubuntu-22.04
    env:
      COMPILER_VERS: 11 12 13 14 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prep Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl csh git python3
          curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python3 get-pip.py
          python3 -m pip install cmake
      - name: Build, Install & Sometimes Test
        run: |
          for ver in ${COMPILER_VERS}; do
            sudo apt-get install -y clang-${ver} clang++-${ver} libomp5-${ver} libomp-${ver}-dev; 
            if [ ${ver} -eq 15 ]; then \
              sudo CC=clang-${ver} CXX=clang++-${ver} bash build.sh 1; \
            else \
              sudo CC=clang-${ver} CXX=clang++-${ver} NO_CAL_TEST=ON bash build.sh 1; \
            fi;
           sudo apt-get remove -y clang-${ver} clang++-${ver} libomp5-${ver} libomp-${ver}-dev;
          done;
